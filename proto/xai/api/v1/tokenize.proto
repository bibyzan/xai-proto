syntax = "proto3";

package xai_api;

// An API service to tokenize input prompts.
service Tokenize {
  // Convert text to a sequence of tokens.
  rpc TokenizeText(TokenizeTextRequest) returns (TokenizeTextResponse) {}
}

// Request to convert text to a sequence of tokens.
message TokenizeTextRequest {
  // Text to tokenize.
  string text = 1;

  // Name or alias of the model used for tokenization.
  string model = 2;

  // An opaque string supplied by the API client (customer) to identify a user.
  // The string will be stored in the logs and can be used in customer service
  // requests to identify certain requests.
  string user = 3;
}

// Information on a token.
message Token {
  // ID of the token.
  uint32 token_id = 1;

  // String snippet of the token.
  string string_token = 2;

  // Bytes representing the token.
  bytes token_bytes = 4;
}

// Response including the tokenization result.
message TokenizeTextResponse {
  // The sequence of tokens. This is the output of the tokenization process.
  repeated Token tokens = 1;

  // The name of the model used for the request. This model name contains
  // the actual model name used rather than any aliases.
  // This means the this can be `grok-2-1212` even when the request was
  // specifying `grok-2-latest`.
  string model = 2;
}
